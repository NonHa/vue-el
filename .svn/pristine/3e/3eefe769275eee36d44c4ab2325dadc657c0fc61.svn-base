import {
    baseUrl
} from './env'


export default async(url = '/webapi.php', data = {}, type = 'POST', method = 'fetch') => {
	// var xmlhttp = new XMLHttpRequest();
	// xmlhttp.onreadystatechange = function(){
	// 	if (xmlhttp.readyState==4 && xmlhttp.status==200){
	// 		var result = xmlhttp.responseText; 
	// 		obj = JSON.parse(result); 
					   
	// 		myfunc(obj);
	// 	}
	// }
    
    // var ary = [];
    // for(var key in data){  
    //     ary.push(key + '=' + encodeURIComponent(data[key]));  
    // }  
    // var upstr = ary.join('&');  
	// // console.log("window.location.host********"+window.location.host);
	// // console.log("document.location.protocol**********"+document.location.protocol);
	// var api_url = baseUrl + url

    // ////////////////////////////////////////
    // //   以下这行注意，与控制台下面的js不同
    // ///////////////////////////////////////
	// // url += "/webapi.php";  
	// // r = Math.random();
	// // url += "?rand=" + r; 
	// api_url += "?r=0.111111111"; 
    
	// xmlhttp.open("post",api_url,true);
    // xmlhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');  
	// xmlhttp.send(upstr);

    type = type.toUpperCase();
    url = baseUrl + url + '?r=0.111111111';
		console.log('url', url);
    // / 此处规定get请求的参数使用时放在data中，如同post请求
    if (type == 'GET') {
        let dataStr = '';
        Object.keys(data).forEach(key => {
            dataStr += key + '=' + data[key] + '&';
        })

        if (dataStr !== '') {
            dataStr = dataStr.substr(0, dataStr.lastIndexOf('&'));
            url = url + '?' + dataStr;
        }
    }

    // 对于支持fetch方法的浏览器，处理如下：
    if (window.fetch && method == 'fetch') {
        let requestConfig = {
            // fetch默认不会带cookie，需要添加配置项credentials允许携带cookie
            credentials: 'include',
            method: type,
            headers: {
                // 'Accept': 'application/json',
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            mode: 'cors',  // 以CORS的形式跨域
            cache: 'force-cache'
        }

        if (type == 'POST') {
            // Object.defineProperty()的作用就是直接在一个对象上定义一个新属性，或者修改一个已经存在的属性
			// Object.defineProperty(obj, prop, desc)
			// obj 需要定义属性的当前对象
			// prop 当前需要定义的属性名
			// desc 属性描述符
			var value2 = ''
						Object.keys(data).forEach(key => {
							value2 += key + '=' + data[key] + '&';
					})
            Object.defineProperty(requestConfig, 'body', {
							
                // value: JSON.stringify(data)
                value: value2
            })
        }
	
					
        try {
	

            const response = await fetch(url, requestConfig);
            const responseJson = await response.json();
            return responseJson
        } catch (error) {
            throw new Error(error)
        } 
    } else {    // 对于不支持fetch的浏览器，便自动使用 ajax + promise
        return new Promise((resolve, reject) => {
            let requestObj;
            if (window.XMLHttpRequest) {
                requestObj = new XMLHttpRequest();
            } else {
                requestObj = new ActiveXObject;
            }
            let sendData = '';
            if (type == 'POST') {
                sendData = JSON.stringify(data);
            }
	
            requestObj.open(type, url, true);
            requestObj.setRequestHeader("Content-type", "application/x-www-form-urlrncoded")
            requestObj.send(sendData);
            requestObj.onreadystatechange = () => {
                if (requestObj.readyState == 4) {
                    if (requestObj.status == 200) {
                        let obj = requestObj.response
                        if (typeof obj !== 'object') {
                            obj = JSON.parse(obj)
                        }
                        resolve(obj)
                    } else {
                        reject(requestObj)
                    }
                }
            }
        })
		}
	
}